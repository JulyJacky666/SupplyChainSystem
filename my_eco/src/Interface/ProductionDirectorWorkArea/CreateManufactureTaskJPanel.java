/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ProductionDirectorWorkArea;

import Business.Employee.ProductDirector;
import Business.Enterprise.Enterprise;
import Business.Enterprise.Entities.ManufactureTask;
import Business.Enterprise.Entities.Product;
import Business.Enterprise.Entities.SalesOrder;
import Business.Enterprise.ManufactureEnterprise;
import Business.Enterprise.SalesEnterprise;
import Business.Organization.SalesOrganization;
import java.awt.CardLayout;
import java.util.HashMap;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author keweiji
 */
public class CreateManufactureTaskJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateManufactureTask
     */
    private JPanel userProcessContainer;
    private ManufactureEnterprise enterprise;
//    private SalesOrganization salesAndBuysOrganization;

    private HashMap<Product, Integer> store;

    public CreateManufactureTaskJPanel(JPanel userProcessContainer, Enterprise enterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = (ManufactureEnterprise) enterprise;
//        this.salesAndBuysOrganization = salesAndBuysOrganization;
        populateorders();
        poptasks();
        this.setOpaque(false);
    }

    public void populateorders() {
        if (this.store == null) {
            this.store = new HashMap<Product, Integer>();
        }
        DefaultTableModel model = (DefaultTableModel) ordertable.getModel();
        model.setRowCount(0);
        for (SalesOrder salesOrder : this.enterprise.getReceivedOrders()) {
            if (salesOrder.isIscalcutated() == false) {
                for (Product product : salesOrder.getItems().keySet()) {
                    Object[] row = new Object[4];
                    row[0] = String.valueOf(salesOrder.getOrderid());
                    row[1] = product.getNameString();
                    row[2] = product.getAssembletime();
                    row[3] = salesOrder.getItems().get(product);
                    model.addRow(row);
                    if (store.containsKey(product)) {
                        int number = store.get(product);
                        number += salesOrder.getItems().get(product);
                        store.put(product, number);
                    } else {
                        store.put(product, salesOrder.getItems().get(product));
                    }
                }

            }
        }

    }

    public void poptasks() {
        DefaultTableModel model = (DefaultTableModel) taskjTable2.getModel();
        model.setRowCount(0);
        for (ManufactureTask task : this.enterprise.getManufactureTasksdirectory()) {
            if (task.getExcuted() == false) {
                Object[] row = new Object[3];
                row[0] = task.getTaskid();
                row[0] = task.getCounts();
                row[1] = task.getProduct().getNameString();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ordertable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        taskjTable2 = new javax.swing.JTable();
        createtaskjButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(51, 51, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ordertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "From Order", "Products Name", "assemble time per piece", "Amounts"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ordertable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 520, 140));

        taskjTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Task Id", "Amounts", "Product"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(taskjTable2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 280, 520, 140));

        createtaskjButton1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        createtaskjButton1.setText("one click to create all");
        createtaskjButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createtaskjButton1ActionPerformed(evt);
            }
        });
        add(createtaskjButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 220, 260, -1));

        jButton2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton2.setText("back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 430, -1, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel1.setText("New Received Orders:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 50, 230, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel2.setText("Unstarted Tasks:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 250, 200, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void createtaskjButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createtaskjButton1ActionPerformed
        // TODO add your handling code here:
//        for(Product product: store.keySet()){
//            ManufactureTask manufactureTask = new ManufactureTask(store.get(product), product);
//            this.enterprise.add
//        }
        for (SalesOrder salesOrder : this.enterprise.getReceivedOrders()) {
            if (salesOrder.isIscalcutated() == false) {
                this.enterprise.addManufactureTask(salesOrder);
                salesOrder.setIscalcutated(true);
            }
        }
        poptasks();
        populateorders();
    }//GEN-LAST:event_createtaskjButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton createtaskjButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable ordertable;
    private javax.swing.JTable taskjTable2;
    // End of variables declaration//GEN-END:variables
}
