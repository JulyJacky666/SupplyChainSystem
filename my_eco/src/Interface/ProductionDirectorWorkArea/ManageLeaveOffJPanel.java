/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ProductionDirectorWorkArea;

import Business.Employee.Employee;
import Business.Employee.Worker;
import Business.Enterprise.Entities.LeaveRequest;
import Business.Enterprise.Entities.ManufactureTask;
import Business.Enterprise.Entities.WorkLine;
import Business.Enterprise.ManufactureEnterprise;
import Business.Organization.Organization;
import Business.Organization.ProductOrganization;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author keweiji
 */
public class ManageLeaveOffJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageLeaveOffJPanel
     */
//    private ProductOrganization productOrganization;
    private JPanel userProcessContainer;
    private ManufactureEnterprise manufactureEnterprise;

    public ManageLeaveOffJPanel(JPanel userProcessContainer, ManufactureEnterprise manufactureEnterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.manufactureEnterprise = manufactureEnterprise;
        populatetable();
        this.setOpaque(false);
    }

    public void populatetable() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();

        model.setRowCount(0);
        for (Organization organization : this.manufactureEnterprise.getOrganizationDirectory().getOrganizationList()) {
            for (Employee employee : organization.getEmployeeDirectory().getEmployeeList()) {
                if (employee instanceof Worker) {
                    Worker worker = (Worker) employee;
                    for (LeaveRequest leaveRequest : worker.getLeaverequestsList()) {
                        if (leaveRequest.isApproved() == false) {
                            Object[] row = new Object[4];
                            row[0] = leaveRequest;
                            row[1] = worker;
                            row[2] = leaveRequest.getDays();
                            row[3] = leaveRequest.getReason();
                            model.addRow(row);
                        }

                    }
                }
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        approvejButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Request id", "Worker Name", "Leave Days", "Briefs"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 550, 160));

        approvejButton1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        approvejButton1.setText("Approve");
        approvejButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approvejButton1ActionPerformed(evt);
            }
        });
        add(approvejButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 300, -1, -1));

        jButton2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton2.setText("<<Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        ProductionDirectorWorkAreaJPanel manufactureDirectorWorkAreaJPanel = (ProductionDirectorWorkAreaJPanel) component;
        manufactureDirectorWorkAreaJPanel.populatetables();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void approvejButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approvejButton1ActionPerformed
        // TODO add your handling code here:

        int index = jTable1.getSelectedRow();
        Worker worker = (Worker) jTable1.getValueAt(index, 1);
        LeaveRequest leaveRequest = (LeaveRequest) jTable1.getValueAt(index, 0);
        worker.setAbsensetime(leaveRequest.getDays());
        worker.setWorkable(Boolean.FALSE);
        worker.setIsOnVacation(true);
        worker.setOffstartDate(new Date());
        leaveRequest.setApproved(true);

        for (int i = worker.getTaskList().size() - 1; i >= 0; i--) {
            ManufactureTask task = worker.getTaskList().get(i);
            if (task.getCompleted() == false) {
                task.getMenTakePartIn().remove(worker);
                worker.getTaskList().remove(task);
                break;
            }
        }

        for(WorkLine workline:this.manufactureEnterprise.getFactory().getWorklines()){
            if(workline.getWorkersArrayList().contains(worker)){
                workline.getWorkersArrayList().remove(worker);
                break;
            }
        }
                populatetable();
    }//GEN-LAST:event_approvejButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approvejButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
