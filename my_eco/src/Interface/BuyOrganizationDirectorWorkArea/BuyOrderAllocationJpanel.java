/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.BuyOrganizationDirectorWorkArea;

import Business.Employee.Buyer;
import Business.Employee.Employee;
import Business.Enterprise.Entities.Buyorder;
import Business.Enterprise.Entities.Material;
import Business.Enterprise.ManufactureEnterprise;
import Business.Organization.Organization;
import Business.Organization.PurchaseOrganization;
import java.awt.CardLayout;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author keweiji
 */
public class BuyOrderAllocationJpanel extends javax.swing.JPanel {

    /**
     * Creates new form BuyOrderAllocationJpanel
     */
    private ManufactureEnterprise manufactureEnterprise;
    private JPanel userProcessContainer;
    private PurchaseOrganization purchaseOrganization;
    private HashMap<Material, Integer> materialsHashMap;


    public BuyOrderAllocationJpanel(JPanel userProcessContainer, Organization organization, ManufactureEnterprise manufactureEnterprise) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.manufactureEnterprise = manufactureEnterprise;
        this.purchaseOrganization = (PurchaseOrganization) organization;
        this.materialsHashMap = new HashMap<Material, Integer>();

        System.out.println(this.manufactureEnterprise.getTodomaterialHashMap().toString());
        populatetables();
        populatebox();
        this.setOpaque(false);

    }

    public void populatebox() {
        BuyerjComboBox.removeAllItems();
        for (Employee employee : this.purchaseOrganization.getEmployeeDirectory().getEmployeeList()) {
            if (employee instanceof Buyer) {
                BuyerjComboBox.addItem(employee);
            }
        }
    }

    public void populatetables() {
        DefaultTableModel model = (DefaultTableModel) materialjTable1.getModel();
        model.setRowCount(0);
        for (Material material : this.manufactureEnterprise.getTodomaterialHashMap().keySet()) {
            Object[] row = new Object[2];
            row[0] = material;
            row[1] = this.manufactureEnterprise.getTodomaterialHashMap().get(material);
            model.addRow(row);
            System.out.println("add material " + material.getNameString());
        }

        DefaultTableModel model2 = (DefaultTableModel) OrderTable2.getModel();
        model2.setRowCount(0);
        for (Material material : this.materialsHashMap.keySet()) {
//            if(employee instanceof  Buyer){
            Object[] row = new Object[2];
            row[0] = material;
            row[1] = this.materialsHashMap.get(material);
            model2.addRow(row);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        materialjTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        OrderTable2 = new javax.swing.JTable();
        createBt = new javax.swing.JButton();
        add2orderjButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        BuyerjComboBox = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        materialjTable1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        materialjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Material", "Amounts"
            }
        ));
        jScrollPane1.setViewportView(materialjTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, 630, 140));

        OrderTable2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        OrderTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Material", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(OrderTable2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 260, 630, 130));

        createBt.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        createBt.setText("Create Order ");
        createBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createBtActionPerformed(evt);
            }
        });
        add(createBt, new org.netbeans.lib.awtextra.AbsoluteConstraints(537, 400, 150, -1));

        add2orderjButton2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        add2orderjButton2.setText("Add to BuyOrder");
        add2orderjButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add2orderjButton2ActionPerformed(evt);
            }
        });
        add(add2orderjButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 210, 150, -1));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 16)); // NOI18N
        jLabel1.setText("Purchase order Items:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 180, 40));

        BuyerjComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        BuyerjComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        BuyerjComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyerjComboBoxActionPerformed(evt);
            }
        });
        add(BuyerjComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, 160, -1));

        jButton1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void createBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createBtActionPerformed
        Buyer buyer = (Buyer) BuyerjComboBox.getSelectedItem();
        Buyorder buyorder = new Buyorder();
        buyorder.setEnterprise(this.manufactureEnterprise);
        for (Material material : this.materialsHashMap.keySet()) {
            buyorder.getMaterials().put(material, this.materialsHashMap.get(material));
        }
        this.materialsHashMap.clear();
        buyer.getBuyerorders().add(buyorder);
        populatetables();
    }//GEN-LAST:event_createBtActionPerformed

    private void add2orderjButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add2orderjButton2ActionPerformed
        // TODO add your handling code here:
        try {
            int materialindex = materialjTable1.getSelectedRow();
            Material material = (Material) materialjTable1.getValueAt(materialindex, 0);
            int amounts = (int) materialjTable1.getValueAt(materialindex, 1);
            this.materialsHashMap.put(material, amounts);
            this.manufactureEnterprise.getTodomaterialHashMap().remove(material);
            populatetables();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a material item to add");
        }
    }//GEN-LAST:event_add2orderjButton2ActionPerformed

    private void BuyerjComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyerjComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BuyerjComboBoxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox BuyerjComboBox;
    private javax.swing.JTable OrderTable2;
    private javax.swing.JButton add2orderjButton2;
    private javax.swing.JButton createBt;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable materialjTable1;
    // End of variables declaration//GEN-END:variables
}
