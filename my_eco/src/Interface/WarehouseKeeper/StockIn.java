/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.WarehouseKeeper;

import Business.Enterprise.Enterprise;
import Business.Enterprise.Entities.AddMaterialOrder;
import Business.Enterprise.Entities.Material;
import Business.Enterprise.Entities.SupplierWarehouse;
import Business.Enterprise.SupplierEnterprise;
import Business.Organization.Organization;
import Business.Organization.WarehouseOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Interface.WarehouseDirector.ViewCreateMaterial;

/**
 *
 * @author amber
 */
public class StockIn extends javax.swing.JPanel {

    /**
     * Creates new form StockIn
     */
    JPanel containerJPanel;
    UserAccount account;
    Organization organization;
    Enterprise enterprise;
    AddMaterialOrder addMaterialOrder;
    public StockIn(JPanel c, UserAccount account, Organization organization, Enterprise enterprise, AddMaterialOrder addMaterialOrder) {
        initComponents();
        this.setOpaque(false);
        this.containerJPanel = c;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.addMaterialOrder = addMaterialOrder;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        AddjTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 51, 51));

        AddjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Material", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(AddjTable);

        jButton1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton1.setText("Stock In");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(315, 315, 315)
                        .addComponent(jButton1)))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButton1)
                .addContainerGap(168, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        for(Material m : addMaterialOrder.getAdd_materials().keySet()){
            
            if(((SupplierEnterprise)enterprise).getAvaliableMaterialHashMap().containsKey(m)){
                  int oldquantity = ((SupplierEnterprise)enterprise).getAvaliableMaterialHashMap().get(m);
                  int newquantity = oldquantity + addMaterialOrder.getAdd_materials().get(m);
                  ((SupplierEnterprise)enterprise).getAvaliableMaterialHashMap().put(m, newquantity);
                }
            else{
                 ((SupplierEnterprise)enterprise).getAvaliableMaterialHashMap().put(m, addMaterialOrder.getAdd_materials().get(m));
                 }
            if(((WarehouseOrganization)organization).getAvaliableMaterialHashMap().containsKey(m)){
                  int oldquantity = ((WarehouseOrganization)organization).getAvaliableMaterialHashMap().get(m);
                  int newquantity = oldquantity + addMaterialOrder.getAdd_materials().get(m);
                  ((WarehouseOrganization)organization).getAvaliableMaterialHashMap().put(m, newquantity);
                }
            else{
                 ((WarehouseOrganization)organization).getAvaliableMaterialHashMap().put(m, addMaterialOrder.getAdd_materials().get(m));
                 }
    }//GEN-LAST:event_jButton1ActionPerformed
        ((WarehouseOrganization)organization).getAddMaterialDictionary().removeAddMaterialOrder(addMaterialOrder);
        containerJPanel.remove(this);
        JOptionPane.showMessageDialog(null, "Stock In!", "Warning", JOptionPane.INFORMATION_MESSAGE);
        Component[] componentArray = containerJPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SelectStockIn viewcreatematerial = (SelectStockIn) component;
        viewcreatematerial.refresh();
        CardLayout layout = (CardLayout) containerJPanel.getLayout();
        layout.previous(containerJPanel);
    }

        
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) AddjTable.getModel();

        model.setRowCount(0);
        for (Material m : addMaterialOrder.getAdd_materials().keySet()) {
            Object[] row = new Object[2];
            row[0] = m;
            row[1] = addMaterialOrder.getAdd_materials().get(m);
            model.addRow(row);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AddjTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
