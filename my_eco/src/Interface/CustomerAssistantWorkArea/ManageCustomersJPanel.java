/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.CustomerAssistantWorkArea;

import Business.Area.Area;
import Business.Employee.Customer;
import Business.Employee.CustomerAssisatant;
import Business.Enterprise.Entities.SalesOrder;
import Business.Enterprise.ManufactureEnterprise;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author keweiji
 */
public class ManageCustomersJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageCustomersJPanel
     */
    private JPanel userProcessContainer;
//      private Area area;
    private ArrayList<Area> areas;
    private UserAccount account;
//      private  CustomerAssistant customerAssistant;
    private CustomerAssisatant customerAssistant;
    private HashMap<ManufactureEnterprise,String> allManufactureEnterprises;

    public ManageCustomersJPanel(JPanel userProcessContainer, UserAccount account, ArrayList<Area> areas,HashMap<ManufactureEnterprise,String> allManufactureEnterprises) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.areas = areas;
        this.account = account;
        customerAssistant = (CustomerAssisatant) account.getEmployee();
        this.allManufactureEnterprises = allManufactureEnterprises;
        populatecombox();
        this.setOpaque(false);
    }

    public void populatecombox() {
        this.areaJComboBox.removeAllItems();
        for (Area area : this.areas) {
            areaJComboBox.addItem(area);
        }
    }

    public void populateCustomer(Area area) {
        DefaultTableModel model = (DefaultTableModel) customdrjTable1.getModel();
        model.setRowCount(0);
//        System.out.println("11111");
//        System.out.println(area==null);
//        System.out.println("getCustomerDirectory"+area.getCustomerDirectory()==null);
//        System.out.println("getCustomerDict"+area.getCustomerDirectory().getCustomerDict()==null);
        for (Customer customer : area.getCustomerDirectory().getCustomerDict()) {
            Object[] row = new Object[2];
            row[0] = customer;
            row[1] = customer.getSalesOrderDictory().getSalesorders().size();
            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        customdrjTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        showdetail = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        orderdetailjTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        areaJComboBox = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(51, 51, 51));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        customdrjTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Customer", "Order Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(customdrjTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 490, 170));

        jButton1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 430, -1, -1));

        showdetail.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        showdetail.setText("Show Detail");
        showdetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showdetailActionPerformed(evt);
            }
        });
        add(showdetail, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 130, 160, -1));

        orderdetailjTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Order Id", "total Items", "Delivered"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(orderdetailjTable2);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 490, 160));

        jButton3.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton3.setText("Manage This Order");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 270, 160, -1));

        areaJComboBox.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        areaJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        areaJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                areaJComboBoxActionPerformed(evt);
            }
        });
        add(areaJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, 160, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void areaJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_areaJComboBoxActionPerformed
        // TODO add your handling code here:
        Area area = (Area) areaJComboBox.getSelectedItem();
        if(area != null){
            populateCustomer(area);
        }
        
    }//GEN-LAST:event_areaJComboBoxActionPerformed

    private void showdetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showdetailActionPerformed
        // TODO add your handling code here:
        try {
            int ccustomerindex = customdrjTable1.getSelectedRow();
            Customer customer = (Customer) customdrjTable1.getValueAt(ccustomerindex, 0);
            DefaultTableModel model = (DefaultTableModel) orderdetailjTable2.getModel();
            model.setRowCount(0);
            for (SalesOrder order : customer.getSalesOrderDictory().getSalesorders()) {
                Object[] row = new Object[3];
                row[0] = order;
                row[1] = order.getItems().size();
                row[2] = order.isIsReadyToCustomer();
                model.addRow(row);
//                row[2] = 
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "please select a customer " + e.getMessage());
            return;
        }
    }//GEN-LAST:event_showdetailActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        try {
            int index = orderdetailjTable2.getSelectedRow();
            int customerindex = customdrjTable1.getSelectedRow();
            SalesOrder order = (SalesOrder) orderdetailjTable2.getValueAt(index, 0);
            Customer customer =(Customer) customdrjTable1.getValueAt(customerindex, 0);
            userProcessContainer.add("manageOrganizationJPanel", new ManageOrders(userProcessContainer, account,areas, order,customer,allManufactureEnterprises));
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "please select a order and a customer"+e.getMessage());
            return;
        }

    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox areaJComboBox;
    private javax.swing.JTable customdrjTable1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable orderdetailjTable2;
    private javax.swing.JButton showdetail;
    // End of variables declaration//GEN-END:variables
}
