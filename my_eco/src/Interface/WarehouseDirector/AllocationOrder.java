/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.WarehouseDirector;

import Business.Enterprise.Enterprise;
import Business.Enterprise.Entities.Buyorder;
import Business.Enterprise.Entities.Material;
import Business.Organization.Organization;
import Business.Organization.WarehouseOrganization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author amber
 */
public class AllocationOrder extends javax.swing.JPanel {

    /**
     * Creates new form AllocationOrder
     */
    JPanel containerJPanel;
    UserAccount account;
    Organization organization;
    Enterprise enterprise;
    Buyorder buyerorder;
    public AllocationOrder(JPanel c, UserAccount account, Organization organization, Enterprise enterprise, Buyorder buyerorder) {
        initComponents();
        this.setOpaque(false);
        this.containerJPanel = c;
        this.account = account;
        this.organization =  organization;
        this.enterprise= enterprise;
        this.buyerorder = buyerorder;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        MaterialjTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(204, 204, 204));

        MaterialjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Material", "quantity"
            }
        ));
        jScrollPane1.setViewportView(MaterialjTable);

        jButton1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton1.setText("Receive!");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jButton2.setText("<<back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(120, 120, 120))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap(152, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        containerJPanel.remove(this);
        Component[] componentArray = containerJPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        vieworders manageProductCatalogJPanel = (vieworders) component;
        manageProductCatalogJPanel.populateTable();
        CardLayout layout = (CardLayout) containerJPanel.getLayout();
        layout.previous(containerJPanel);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean enough = true;
        for(Material m : buyerorder.getMaterials().keySet()){
            if(!((WarehouseOrganization)organization).getAvaliableMaterialHashMap().containsKey(m)){
                enough = false;
                break;
            }
            else{
                if(((WarehouseOrganization)organization).getAvaliableMaterialHashMap().get(m)<buyerorder.getMaterials().get(m)){
                    enough = false;
                    break;
                }
            }
        }
        if(enough){
            buyerorder.setReOrganization(organization);
            JOptionPane.showMessageDialog(null, "Receive!", "Warning", JOptionPane.INFORMATION_MESSAGE);
        containerJPanel.remove(this);
        Component[] componentArray = containerJPanel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        vieworders vieworderpanle = (vieworders) component;
        vieworderpanle.populateTable();
        CardLayout layout = (CardLayout) containerJPanel.getLayout();
        layout.previous(containerJPanel);
        }
        else{
            JOptionPane.showMessageDialog(null, "YOU DO NOT HAVE ENOUGH MATERIAL!", "Warning", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) MaterialjTable.getModel();

        model.setRowCount(0);
        for (Material m : buyerorder.getMaterials().keySet()) {
            Object[] row = new Object[2];
            row[0] = m;
            row[1] = buyerorder.getMaterials().get(m);
            model.addRow(row);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable MaterialjTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
